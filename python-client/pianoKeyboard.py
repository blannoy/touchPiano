#! /usr/bin/env python3
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 8.0
#  in conjunction with Tcl version 8.6
#    Oct 06, 2024 10:17:42 AM CEST  platform: Linux

import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *
import os.path

_location = os.path.dirname(__file__)

import pianoKeyboard_support

_bgcolor = '#d9d9d9'
_fgcolor = '#000000'
_tabfg1 = 'black' 
_tabfg2 = 'white' 
_bgmode = 'light' 
_tabbg1 = '#d9d9d9' 
_tabbg2 = 'gray40' 

_style_code_ran = 0
def _style_code():
    global _style_code_ran
    if _style_code_ran: return        
    try: pianoKeyboard_support.root.tk.call('source',
                os.path.join(_location, 'themes', 'default.tcl'))
    except: pass
    style = ttk.Style()
    style.theme_use('default')
    style.configure('.', font = "TkDefaultFont")
    if sys.platform == "win32":
       style.theme_use('winnative')    
    _style_code_ran = 1

class Toplevel2:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''

        top.geometry("568x213+430+159")
        top.minsize(1, 1)
        top.maxsize(1351, 738)
        top.resizable(1,  1)
        top.title("Piano keyboard")

        self.top = top
        self.gotoURL = tk.StringVar()
        self.stopKeys = tk.StringVar()
        self.startActive=tk.BooleanVar()
        self.stopActive=tk.BooleanVar()
        self.che57 = tk.IntVar()

        self.Label1 = tk.Label(self.top)
        self.Label1.place(relx=0.088, rely=0.08, height=10, width=37)
        self.Label1.configure(activebackground="#d9d9d9")
        self.Label1.configure(anchor='w')
        self.Label1.configure(compound='left')
        self.Label1.configure(font="-family {DejaVu Sans} -size 10")
        self.Label1.configure(text='''URL''')

        self.Label2 = tk.Label(self.top)
        self.Label2.place(relx=0.053, rely=0.282, height=20, width=75)
        self.Label2.configure(activebackground="#d9d9d9")
        self.Label2.configure(anchor='w')
        self.Label2.configure(compound='left')
        self.Label2.configure(font="-family {DejaVu Sans} -size 10")
        self.Label2.configure(text='''Stop key''')

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.URL = tk.Entry(self.top)
        self.URL.place(relx=0.229, rely=0.047, height=33, relwidth=0.68)
        self.URL.configure(background="white")
        self.URL.configure(font="-family {DejaVu Sans Mono} -size 10")
        self.URL.configure(selectbackground="#d9d9d9")
        self.URL.configure(textvariable=self.gotoURL)

        _style_code()
        self.stopLetter = ttk.Combobox(self.top)
        self.stopLetter.place(relx=0.229, rely=0.282, relheight=0.099
                , relwidth=0.312)
        self.stopLetter.configure(font="-family {DejaVu Sans} -size 10")
        self.stopLetter.configure(textvariable=self.stopKeys)

        self.continuous = tk.Checkbutton(self.top)
        self.continuous.place(relx=0.211, rely=0.469, relheight=0.146
                , relwidth=0.412)
        self.continuous.configure(activebackground="#d9d9d9")
        self.continuous.configure(anchor='w')
        self.continuous.configure(compound='left')
        self.continuous.configure(font="-family {DejaVu Sans} -size 10")
        self.continuous.configure(justify='left')
        self.continuous.configure(text='''Toets continu''')
        self.continuous.configure(variable=self.che57)

        self.startButton = tk.Button(self.top)
        self.startButton.place(relx=0.088, rely=0.704, height=51, width=131)
        self.startButton.configure(activebackground="#d9d9d9")
        self.startButton.configure(command=lambda:pianoKeyboard_support.send_start())
        self.startButton.configure(font="-family {DejaVu Sans} -size 10")
        self.startButton.configure(text='''Start''')

        self.stopButton = tk.Button(self.top)
        self.stopButton.place(relx=0.352, rely=0.704, height=51, width=131)
        self.stopButton.configure(activebackground="#d9d9d9")
        self.stopButton.configure(command=lambda:pianoKeyboard_support.send_stop())
        self.stopButton.configure(font="-family {DejaVu Sans} -size 10")
        self.stopButton.configure(text='''Stop''')

def start_up():
    pianoKeyboard_support.main()

if __name__ == '__main__':
    pianoKeyboard_support.main()




